#!/bin/bash
###############################################################################
# Project: hi-cli
# Description: The cross platform development toolkit - hi-cli
# Author: John Deng (john.deng@outlook.com)
#
# Copyright (c) 2014-2017 John Deng (john.deng@outlook.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Author: John Deng (john.deng@outlook.com)
# Updated: 2017-02-11
###############################################################################
function write_env() {
    profile=$1
    if [ "${profile}" == "" ]; then
        return 1
    fi
    cat >> "${profile}" <<_EOF_
#hi-cli-begin
export HI_CLI_HOME="${HI_CLI_HOME}"
export PATH="\${HI_CLI_HOME}/bin":\$PATH
#hi-cli-end
_EOF_

}

function ensure_environment() {
profile="$1"
# remove if found hi-cli environment variables
if [ $(cat "${profile}" | grep "\#hi-cli-begin" | wc -l) != 0 ]; then
    #echo "replace ..."
    sed -n ":b
$ !{
   N
   b b
   }
$ {
   s|\(\n\#hi-cli-begin\).*\(\n\)\([[:blank:]]*\)\(\#hi-cli-end\)|${REPLACEWITH}|
   p
   }" "${profile}" > /tmp/.profile

   mv /tmp/.profile "${profile}"
fi

    write_env "${profile}"
}

###############################################################################
function main() {
    if [ "${arg2}" != "" ]; then
        hi package install ${arg2}
        exit $?
    fi

    echo "instal hi-cli ..."

    if which tput >/dev/null 2>&1; then
      ncolors=$(tput colors)
    fi
    if [ -t 1 ] && [ -n "$ncolors" ] && [ "$ncolors" -ge 8 ]; then
        RED="$(tput setaf 1)"
        GREEN="$(tput setaf 2)"
        YELLOW="$(tput setaf 3)"
        BLUE="$(tput setaf 4)"
        BOLD="$(tput bold)"
        NORMAL="$(tput sgr0)"
    else
        RED=""
        GREEN=""
        YELLOW=""
        BLUE=""
        BOLD=""
        NORMAL=""
    fi

    set -e

    profile=
    if [ -f "${HOME}/.zshrc" ]; then
        profile="${HOME}/.zshrc"
    elif [ -f "${HOME}/.bashrc" ]; then
        profile="${HOME}/.bashrc"
    else
        profile="/etc/profile"
    fi
    
    #echo "append ..."
    if [ "$1" != "" ]; then
        HI_CLI_HOME=$1
    else
        HI_CLI_HOME="/usr/local/hi-cli"
    fi
    
    umask g-w,o-w
    printf "${BLUE}Cloning hi-cli...${NORMAL}\n"
    hash git >/dev/null 2>&1 || {
        echo "Error: git is not installed"
        exit 1
    }
    if [ "$OSTYPE" = cygwin ]; then
        if git --version | grep msysgit > /dev/null; then
        echo "Error: Windows/MSYS Git is not supported on Cygwin"
        echo "Error: Make sure the Cygwin git package is installed and is first on the path"
        exit 1
        fi
    fi

    if [ -f "${HI_CLI_HOME}/bin/hi" ]; then
        printf "${YELLOW}hi-cli is already installed in ${HI_CLI_HOME}!\n${NORMAL}"
        which hi > /dev/null
        if [ $? == 0 ]; then
            hi update
        fi
        exit
    fi
    printf "Please wait ..."
    env git clone --depth=1 https://github.com/hi-cli/hi-cli.git "${HI_CLI_HOME}" > /dev/null || {
        printf "Error: git clone of hi-cli repo failed\n"
        exit 1
    }
    echo ""
    pushd "${HI_CLI_HOME}" > /dev/null
        HI_CLI_BIN=$(echo ${HI_CLI_HOME##*\/})
        if [ "${HI_CLI_BIN}" == "bin" ]; then
        HI_CLI_HOME="${HI_CLI_HOME/\/bin/}"
        fi

        mkdir -p "${HI_CLI_HOME}/modules"

        if [ -d /etc/profile.d ]; then
            write_env "/etc/profile.d/hienv.sh"
        else
            ensure_environment "${profile}"
        fi
        
        mkdir -p /usr/local/bin
        ln -sf "${HI_CLI_HOME}/bin/hi" "/usr/local/bin/hi"
        ln -sf "${HI_CLI_HOME}/bin/hi-all" "/usr/local/bin/hi-all"
        ln -sf "${HI_CLI_HOME}/bin/hpm" "/usr/local/bin/hpm"

        printf "${BLUE}Installed hi-cli successfully!\n${NORMAL}"
    popd > /dev/null
}
main
###############################################################################
